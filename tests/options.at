# Hand crafted tests for GNU M4.                               -*- Autotest -*-
# Copyright (C) 2001, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

AT_BANNER([Options.])


## ------------------ ##
## Discard comments.  ##
## ------------------ ##

AT_SETUP([Discard comments])

AT_DATA([[in]],
[[This is not a comment # but this is.
# This line should dissappear completely.
This should not disappear.
changecom(`<!--', `-->')
html <!--
comment
 --> ends.
]])

AT_CHECK_M4([-c in], 0,
[[This is not a comment This should not disappear.

html  ends.
]])

AT_CLEANUP



## ------------------ ##
## import-environment ##
## ------------------ ##

AT_SETUP([import-environment])

AT_DATA([[in]],
[[`TEST'=TEST
`ZAPPED'=ZAPPED
`OVERRIDE'=OVERRIDE
]])

TEST='This is an environment variable'
export TEST

ZAPPED='This is an environment variable which we will delete'
export ZAPPED

OVERRIDE='This is an environment variable which we will change'
export OVERRIDE

AT_CHECK_M4([--import-environment -UZAPPED -DOVERRIDE='It is changed.' in], 0,
[[TEST=This is an environment variable
ZAPPED=ZAPPED
OVERRIDE=It is changed.
]])

AT_CLEANUP


## ----------- ##
## debug-flags ##
## ----------- ##

AT_SETUP([debug-flags])

AT_DATA([[in]],
[[divnum
len(`abc')
]])

dnl AT_CHECK_M4 starts life with -d.  Make sure it looks like -daeq.
AT_CHECK_M4([-tlen in], 0, [[0
3
]], [[m4trace: -1- len(`abc') -> `3'
]])

dnl Test all flags.
AT_CHECK_M4([-dV in], 0, [[0
3
]], [[m4debug: input read from in
m4trace:in:1: -1- id 1: divnum ...
m4trace:in:1: -1- id 1: divnum -> ???
m4trace:in:1: -1- id 1: divnum -> `0'
m4trace:in:2: -1- id 2: len ...
m4trace:in:2: -1- id 2: len(`abc') -> ???
m4trace:in:2: -1- id 2: len(...) -> `3'
m4debug:in:3: input exhausted
]])

dnl Test addition and subtraction of flags.
AT_CHECK_M4([-d-e -d+xt in], 0, [[0
3
]], [[m4trace: -1- id 1: divnum
m4trace: -1- id 2: len(`abc')
]])

AT_CLEANUP
