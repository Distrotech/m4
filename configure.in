# Configure template for GNU m4.
# Copyright (C) 1991-1998 Free Software Foundation, Inc.
# Process this file with autoconf to produce a configure script.

undefine([changeword])

AC_INIT(src/m4.c)
AM_CONFIG_HEADER(config.h)
AC_ARG_PROGRAM

AM_INIT_AUTOMAKE(m4,1.4j)
ALL_LINGUAS="de fr it ja nl pl ru sv"

AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB
dnl AM_PROG_LIBTOOL
AC_PATH_PROG(PERL,perl)

AC_AIX
AC_ISC_POSIX
AC_MINIX
AM_C_PROTOTYPES
AC_C_CONST

AC_CHECK_HEADERS(limits.h locale.h memory.h siginfo.h string.h unistd.h)
AC_HEADER_STDC
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T

AC_CHECK_FUNCS(mkstemp sigaction sigaltstack sigstack sigvec strerror tmpfile)

AC_FUNC_ALLOCA
AC_FUNC_VPRINTF
AC_REPLACE_FUNCS(strtol obstack xmalloc xstrdup)
AC_CHECK_FUNC(getopt_long, , [LIBOBJS="$LIBOBJS getopt1.o getopt.o"])
jm_WITH_REGEX
jm_PREREQ_ERROR

AC_MSG_CHECKING(ecvt declaration)
AC_EGREP_HEADER(ecvt, stdlib.h,
  [AC_MSG_RESULT(yes); AC_DEFINE(HAVE_EFGCVT, 2)],
  [AC_MSG_RESULT(no); AC_CHECK_FUNCS(ecvt)])

AC_MSG_CHECKING(if stack overflow is detectable)
# Code from Jim Avera <jima@netcom.com>.
# stackovf.c requires:
#  1. Either sigaction with SA_ONSTACK, or sigvec with SV_ONSTACK
#  2. Either sigaltstack or sigstack
#  3. getrlimit, including support for RLIMIT_STACK
use_stackovf=no
if test "$ac_cv_func_sigaction" = yes || test "$ac_cv_func_sigvec" = yes; then
  if test "$ac_cv_func_sigaltstack" = yes || test "$ac_cv_func_sigstack" = yes; then
    AC_TRY_LINK([#include <sys/time.h>
#include <sys/resource.h>
#include <signal.h>],
      [struct rlimit r; int i; getrlimit (RLIMIT_STACK, &r)
#if (!defined(HAVE_SIGACTION) || !defined(SA_ONSTACK)) \
    && (!defined(HAVE_SIGVEC) || !defined(SV_ONSTACK))
choke me		/* SA_ONSTACK and/or SV_ONSTACK are not defined */
#endif],
      use_stackovf=yes)
  fi
fi
AC_MSG_RESULT($use_stackovf)
if test "$use_stackovf" = yes; then
  AC_DEFINE(USE_STACKOVF)
  STACKOVF=stackovf.${U}o
  AC_SUBST(STACKOVF)
  AC_EGREP_HEADER(rlim_t, sys/resource.h, , AC_DEFINE(rlim_t, int))
  AC_EGREP_HEADER(stack_t, signal.h, , AC_DEFINE(stack_t, struct sigaltstack))
  AC_EGREP_HEADER(sigcontext, signal.h, AC_DEFINE(HAVE_SIGCONTEXT))
fi

AC_MSG_CHECKING(if changeword is wanted)
AC_ARG_ENABLE(changeword,
[  --enable-changeword     enable -W and changeword() builtin],
[if test "$enableval" = yes; then
  AC_MSG_RESULT(yes)
  AC_DEFINE(ENABLE_CHANGEWORD)
else
  AC_MSG_RESULT(no)
fi], [AC_MSG_RESULT(no)])

AC_MSG_CHECKING(if support for dynamic modules is wanted)
AC_ARG_WITH(modules,
[  --with-modules          add support for dynamic modules],
[use_modules=$withval], [use_modules=no])
AC_MSG_RESULT($use_modules)

if test "$use_modules" = yes; then
  LIBS="$LIBS -ldl"
  AC_CHECK_HEADER([dlfcn.h],
    [AC_CACHE_CHECK([for dlopen in libdl], ac_cv_func_dlopen_libdl,
       [AC_TRY_LINK([#include <dlfcn.h>],
	  [(void)dlopen(0, RTLD_NOW)],
	  ac_cv_func_dlopen_libdl=yes,
	  ac_cv_func_dlopen_libdl=no)])],
	ac_cv_func_dlopen_libdl=no)

  if test "$ac_cv_func_dlopen_libdl$ac_cv_header_dlfcn_h" = yesyes; then
    AC_DEFINE(WITH_MODULES)
    LDFLAGS="$LDFLAGS -rdynamic"
  else
    LIBS=`echo $LIBS | sed -e 's/-ldl//'`
    AC_MSG_WARN([-ldl library not found or does not appear to work])
    use_modules=no
  fi
fi

AC_MSG_CHECKING(if extended and fractional arithmetic is wanted)
AC_ARG_WITH(gmp,
[  --with-gmp              use gmp for extended and fractional arithmetic],
[use_gmp=$withval], [use_gmp=no])
AC_MSG_RESULT($use_gmp)

if test "$use_gmp" = yes; then
  LIBS="$LIBS -lgmp"
  AC_CHECK_HEADER([gmp.h],
    [AC_CACHE_CHECK([for mpq_init in libgmp], ac_cv_func_mpq_init_libgmp,
       [AC_TRY_LINK([#include <gmp.h>],
	  [mpq_t x; (void)mpq_init(x)],
	  ac_cv_func_mpq_init_libgmp=yes,
	  ac_cv_func_mpq_init_libgmp=no)])],
	ac_cv_func_mpq_init_libgmp=no)

  if test "$ac_cv_func_mpq_init_libgmp$ac_cv_header_gmp_h" = yesyes; then
    AC_DEFINE(WITH_GMP)
  else
    LIBS=`echo $LIBS | sed -e 's/-lgmp//'`
    AC_MSG_WARN([gmp library not found or does not appear to work])
    use_gmp=no
  fi
fi

if test "$use_gmp" != yes; then
  AC_CHECK_SIZEOF(long long int, 0)
fi

AM_WITH_DMALLOC
AM_GNU_GETTEXT
dnl AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)

AC_OUTPUT(Makefile acm4/Makefile intl/Makefile po/Makefile.in doc/Makefile \
lib/Makefile src/Makefile modules/Makefile tests/Makefile examples/Makefile, \
[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile; \
test -z "$CONFIG_HEADERS" || echo timestamp > stamp-h])


