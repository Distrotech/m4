This is Info file m4.info, produced by Makeinfo version 1.68 from the
input file m4.texinfo.

START-INFO-DIR-ENTRY
* m4: (m4).			A powerful macro processor.
END-INFO-DIR-ENTRY

   This file documents the GNU `m4' utility.

   Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1998 Free Software
Foundation, Inc.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that
the entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Foundation.


File: m4.info,  Node: Extensions,  Next: Incompatibilities,  Prev: Compatibility,  Up: Compatibility

Extensions in GNU `m4'
======================

   This version of `m4' contains a few facilities, that do not exist in
System V `m4'.  These extra facilities are all suppressed by using the
`-G' command line option, unless overridden by other command line
options.

   * In the `$'N notation for macro arguments, N can contain several
     digits, while the System V `m4' only accepts one digit.  This
     allows macros in GNU `m4' to take any number of arguments, and not
     only nine (*note Arguments::.).

   * Files included with `include' and `sinclude' are sought in a user
     specified search path, if they are not found in the working
     directory.  The search path is specified by the `-I' option and the
     `M4PATH' environment variable (*note Search Path::.).

   * Arguments to `undivert' can be non-numeric, in which case the named
     file will be included uninterpreted in the output (*note
     Undivert::.).

   * Formatted output is supported through the `format' builtin, which
     is modeled after the C library function `printf' (*note Format::.).

   * Searches and text substitution through regular expressions are
     supported by the `regexp' (*note Regexp::.) and `patsubst' (*note
     Patsubst::.) builtins.

   * The output of shell commands can be read into `m4' with `esyscmd'
     (*note Esyscmd::.).

   * There is indirect access to any builtin macro with `builtin'
     (*note Builtin::.).

   * Macros can be called indirectly through `indir' (*note Indir::.).

   * The name of the current input file and the current input line
     number are accessible through the builtins `__file__' and
     `__line__' (*note Errprint::.).

   * The generation of sync lines can be controlled through `syncoutput'
     (*note Syncoutput::.).

   * The format of the output from `dumpdef' and macro tracing can be
     controlled with `debugmode' (*note Debug Levels::.).

   * The destination of trace and debug output can be controlled with
     `debugfile' (*note Debug Output::.).

   In addition to the above extensions, GNU `m4' implements the
following command line options: `-F', `-G', `-I', `-L', `-R', `-V',
`-W', `-d', `-l', `-o' and `-t'.  *Note Invoking m4::, for a
description of these options.

   Also, the debugging and tracing facilities in GNU `m4' are much more
extensive than in most other versions of `m4'.


File: m4.info,  Node: Incompatibilities,  Next: Other Incompat,  Prev: Extensions,  Up: Compatibility

Facilities in System V `m4' not in GNU `m4'
===========================================

   The version of `m4' from System V contains a few facilities that
have not been implemented in GNU `m4' yet.

   * System V `m4' supports multiple arguments to `defn'.  This is not
     implemented in GNU `m4'.  Its usefulness is unclear to me.


File: m4.info,  Node: Other Incompat,  Prev: Incompatibilities,  Up: Compatibility

Other incompatibilities
=======================

   There are a few other incompatibilities between this implementation
of `m4', and the System V version.

   * GNU `m4' implements sync lines differently from System V `m4',
     when text is being diverted.  GNU `m4' outputs the sync lines when
     the text is being diverted, and System V `m4' when the diverted
     text is being brought back.

     The problem is which lines and filenames should be attached to
     text that is being, or has been, diverted.  System V `m4' regards
     all the diverted text as being generated by the source line
     containing the `undivert' call, whereas GNU `m4' regards the
     diverted text as being generated at the time it is diverted.

     I expect the sync line option to be used mostly when using `m4' as
     a front end to a compiler.  If a diverted line causes a compiler
     error, the error messages should most probably refer to the place
     where the diversion were made, and not where it was inserted again.

   * GNU `m4' makes no attempt at prohiting autoreferential definitions
     like:

          define(`x', `x')
          define(`x', `x ')

     There is nothing inherently wrong with defining `x' to return `x'.
     The wrong thing is to expand `x' unquoted.  In `m4', one might
     use macros to hold strings, as we do for variables in other
     programming languages, further checking them with:

          ifelse(defn(`HOLDER'), `VALUE', ...)

     In cases like this one, an interdiction for a macro to hold its own
     name would be a useless limitation.  Of course, this leave more
     rope for the GNU `m4' user to hang himself!  Rescanning hangs may
     be avoided through careful programming, a little like for endless
     loops in traditional programming languages.

   * GNU `m4' without `-G' option will define the macro `__gnu__' to
     expand to the empty string.

     On UNIX systems, GNU `m4' without the `-G' option will define the
     macro `__unix__', otherwise the macro `unix'.  Both will expand to
     the empty string.


File: m4.info,  Node: Experiments,  Next: Answers,  Prev: Compatibility,  Up: Top

Experimental features in GNU m4
*******************************

   Certain features of GNU `m4' are experimental.

   Some are only available if activated by an option given to
`configure' at GNU `m4' installation time.  The functionality might
change or even go away in the future.  *Do not rely on it*.  Please
direct your comments about it the same way you would do for bugs.

Changesyntax
============

   An experimental feature, which would improve `m4' usefulness, allows
for changing the way the input is parsed (*note Changesyntax::.).

   No compile time option is needed for `changesyntax'.

   The implementation does not seem to slow down `m4', more likely the
contrary.

Changeword
==========

   An experimental feature, which would improve `m4' usefulness, allows
for changing the syntax for what is a "word" in `m4'.  You should use:

     ./configure --enable-changeword

if you want this feature compiled in.  The current implementation slows
down `m4' considerably and is hardly acceptable.  So, it might go away,
do not count on it yet.

Multiple precision arithmetic
=============================

   Another experimental feature, which would improve `m4' usefulness,
allows for multiple precision rational arithmetic in `eval'.  You
should use:

     ./configure --with-gmp

if you want this feature compiled in.  The current implementation is
unproven and might go away.  Do not count on it yet.


File: m4.info,  Node: Answers,  Next: Concept index,  Prev: Experiments,  Up: Top

Answers
*******

   Some of the examples in this manuals are buggy.  Correctly working
macros are presented here.

   The `cleardivert' macro (*note Cleardiv::.) cannot, as it stands, be
called without arguments to clear all pending diversions.  A macro that
achieves that as well is:

     define(`cleardivert',
     `pushdef(`_num', divnum)divert(-1)ifelse($#, 0,
       `undivert`'', `undivert($@)')divert(_num)popdef(`_num')')

If called without arguments, it will call undivert without argument,
otherwise they will be passed to undivert().


File: m4.info,  Node: Concept index,  Next: Macro index,  Prev: Answers,  Up: Top

Concept index
*************

* Menu:

* Arguments to macros:                   Arguments.
* arguments to macros:                   Macro Arguments.
* arguments to macros, special:          Pseudo Arguments.
* arguments, quoted macro:               Quoting Arguments.
* arithmetic:                            Arithmetic.
* arrays:                                Define.
* builtins, indirect call of:            Builtin.
* call of builtins, indirect:            Builtin.
* call of macros, indirect:              Indir.
* changing comment delimiters:           Changecom.
* changing the quote delimiters:         Changequote.
* characters, translating:               Translit.
* command line, filenames on the:        Invoking m4.
* command line, macro definitions on the: Invoking m4.
* command line, options:                 Invoking m4.
* commands, exit code from UNIX:         Sysval.
* commands, running UNIX:                UNIX commands.
* comment delimiters, changing:          Changecom.
* comments:                              Comments.
* comments, copied to output:            Changecom.
* comparing strings:                     Ifelse.
* compatibility:                         Compatibility.
* conditionals:                          Ifdef.
* controlling debugging output:          Debug Levels.
* counting loops:                        Loops.
* debugging output, controlling:         Debug Levels.
* debugging output, saving:              Debug Output.
* decrement operator:                    Incr.
* defining new macros:                   Definitions.
* definitions, displaying macro:         Dumpdef.
* deleting macros:                       Undefine.
* deleting whitespace in input:          Dnl.
* discarding diverted text:              Cleardiv.
* displaying macro definitions:          Dumpdef.
* diversion numbers:                     Divnum.
* diverted text, discarding:             Cleardiv.
* diverting output to files:             Divert.
* dumping into frozen file:              Frozen files.
* error messages, printing:              Errprint.
* evaluation, of integer expressions:    Eval.
* executing UNIX commands:               UNIX commands.
* exit code from UNIX commands:          Sysval.
* exiting from m4:                       M4exit.
* expansion of macros:                   Macro expansion.
* expansion, tracing macro:              Trace.
* expressions, evaluation of integer:    Eval.
* extracting substrings:                 Substr.
* fast loading of frozen files:          Frozen files.
* file inclusion <1>:                    Undivert.
* file inclusion:                        File Inclusion.
* filenames, on the command line:        Invoking m4.
* files, diverting output to:            Divert.
* files, names of temporary:             Maketemp.
* forloops:                              Loops.
* formatted output:                      Format.
* frozen files for fast loading:         Frozen files.
* GNU extensions <1>:                    Extensions.
* GNU extensions <2>:                    Frozen files.
* GNU extensions <3>:                    Esyscmd.
* GNU extensions <4>:                    Format.
* GNU extensions <5>:                    Patsubst.
* GNU extensions <6>:                    Regexp.
* GNU extensions <7>:                    Undivert.
* GNU extensions <8>:                    Search Path.
* GNU extensions <9>:                    Changesyntax.
* GNU extensions <10>:                   Debug Output.
* GNU extensions <11>:                   Debug Levels.
* GNU extensions <12>:                   Builtin.
* GNU extensions <13>:                   Indir.
* GNU extensions:                        Arguments.
* included files, search path for:       Search Path.
* inclusion, of files <1>:               Undivert.
* inclusion, of files:                   File Inclusion.
* increment operator:                    Incr.
* indirect call of builtins:             Builtin.
* indirect call of macros:               Indir.
* initialization, frozen states:         Frozen files.
* input tokens:                          Syntax.
* input, lexical structure of the:       Changesyntax.
* input, saving:                         M4wrap.
* integer arithmetic:                    Arithmetic.
* integer expression evaluation:         Eval.
* length of strings:                     Len.
* lexical structure of the input:        Changesyntax.
* lexical structure of words:            Changeword.
* local variables:                       Pushdef.
* loops:                                 Loops.
* loops, counting:                       Loops.
* macro definitions, on the command line: Invoking m4.
* macro expansion, tracing:              Trace.
* macro invocation:                      Invocation.
* macros, arguments to <1>:              Arguments.
* macros, arguments to:                  Macro Arguments.
* macros, displaying definitions:        Dumpdef.
* macros, expansion of:                  Macro expansion.
* macros, how to define new:             Definitions.
* macros, how to delete:                 Undefine.
* macros, how to rename:                 Defn.
* macros, indirect call of:              Indir.
* macros, quoted arguments to:           Quoting Arguments.
* macros, recursive:                     Loops.
* macros, special arguments to:          Pseudo Arguments.
* macros, temporary redefinition of:     Pushdef.
* messages, printing error:              Errprint.
* multibranches:                         Ifelse.
* names:                                 Names.
* options, command line:                 Invoking m4.
* output, diverting to files:            Divert.
* output, formatted:                     Format.
* output, saving debugging:              Debug Output.
* pattern substitution:                  Patsubst.
* printing error messages:               Errprint.
* quote delimiters, changing the:        Changequote.
* quoted macro arguments:                Quoting Arguments.
* quoted string:                         Quoted strings.
* recursive macros:                      Loops.
* redefinition of macros, temporary:     Pushdef.
* regular expressions <1>:               Patsubst.
* regular expressions:                   Regexp.
* reloading a frozen file:               Frozen files.
* renaming macros:                       Defn.
* running UNIX commands:                 UNIX commands.
* saving debugging output:               Debug Output.
* saving input:                          M4wrap.
* search path for included files:        Search Path.
* special arguments to macros:           Pseudo Arguments.
* strings, length of:                    Len.
* substitution by regular expression:    Patsubst.
* substrings, extracting:                Substr.
* syntax table:                          Changesyntax.
* temporary filenames:                   Maketemp.
* temporary redefinition of macros:      Pushdef.
* Toggling sync lines within m4:         Syncoutput.
* tokens:                                Syntax.
* tracing macro expansion:               Trace.
* translating characters:                Translit.
* undefining macros:                     Undefine.
* UNIX commands, exit code from:         Sysval.
* UNIX commands, running:                UNIX commands.
* variables, local:                      Pushdef.
* words, lexical structure of:           Changeword.


File: m4.info,  Node: Macro index,  Prev: Concept index,  Up: Top

Macro index
***********

   References are exclusively to the places where a builtin is
introduced the first time.  Names starting and ending with `__' have
these characters removed in the index.

* Menu:

* builtin:                               Builtin.
* changecom:                             Changecom.
* changequote:                           Changequote.
* changesyntax:                          Changesyntax.
* changeword:                            Changeword.
* debugfile:                             Debug Output.
* debugmode:                             Debug Levels.
* decr:                                  Incr.
* define:                                Define.
* defn:                                  Defn.
* divert:                                Divert.
* divnum:                                Divnum.
* dnl:                                   Dnl.
* dumpdef:                               Dumpdef.
* errprint:                              Errprint.
* esyscmd:                               Esyscmd.
* eval:                                  Eval.
* file:                                  Errprint.
* format:                                Format.
* gnu:                                   Other Incompat.
* ifdef:                                 Ifdef.
* ifelse:                                Ifelse.
* include:                               Include.
* incr:                                  Incr.
* index:                                 Index.
* indir:                                 Indir.
* len:                                   Len.
* line:                                  Errprint.
* m4exit:                                M4exit.
* m4wrap:                                M4wrap.
* maketemp:                              Maketemp.
* patsubst:                              Patsubst.
* popdef:                                Pushdef.
* pushdef:                               Pushdef.
* regexp:                                Regexp.
* shift:                                 Loops.
* sinclude:                              Include.
* substr:                                Substr.
* syncoutput:                            Syncoutput.
* syscmd:                                Syscmd.
* sysval:                                Sysval.
* traceoff:                              Trace.
* traceon:                               Trace.
* translit:                              Translit.
* undefine:                              Undefine.
* undivert:                              Undivert.
* unix:                                  Other Incompat.


