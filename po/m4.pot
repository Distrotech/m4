# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 1997-10-06 07:30+0159\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"

#: src/m4.c:106
msgid "ERROR: Stack overflow.  (Infinite define recursion?)"
msgstr ""

#: src/m4.c:133
#, c-format
msgid "Try `%s --help' for more information.\n"
msgstr ""

#: src/m4.c:137
#, c-format
msgid "Usage: %s [OPTION]... [FILE]...\n"
msgstr ""

#: src/m4.c:138
msgid ""
"Mandatory or optional arguments to long options are mandatory or optional\n"
"for short options too.\n"
"\n"
"Operation modes:\n"
"      --help                   display this help and exit\n"
"      --version                output version information and exit\n"
"  -e, --interactive            unbuffer output, ignore interrupts\n"
"  -E, --fatal-warnings         stop execution after first warning\n"
"  -Q, --quiet, --silent        suppress some warnings for builtins\n"
"  -P, --prefix-builtins        force a `m4_' prefix to all builtins\n"
msgstr ""

#: src/m4.c:151
msgid "  -W, --word-regexp=REGEXP     use REGEXP for macro name syntax\n"
msgstr ""

#: src/m4.c:155
msgid ""
"\n"
"Preprocessor features:\n"
"  -I, --include=DIRECTORY      search this directory second for includes\n"
"  -D, --define=NAME[=VALUE]    enter NAME has having VALUE, or empty\n"
"  -U, --undefine=NAME          delete builtin NAME\n"
"  -s, --synclines              generate `#line NO \"FILE\"' lines\n"
msgstr ""

#: src/m4.c:163
msgid ""
"\n"
"Limits control:\n"
"  -G, --traditional            suppress all GNU extensions\n"
"  -H, --hashsize=PRIME         set symbol lookup hash table size\n"
"  -L, --nesting-limit=NUMBER   change artificial nesting limit\n"
msgstr ""

#: src/m4.c:170
msgid ""
"\n"
"Frozen state files:\n"
"  -F, --freeze-state=FILE      produce a frozen state on FILE at end\n"
"  -R, --reload-state=FILE      reload a frozen state from FILE at start\n"
msgstr ""

#: src/m4.c:176
msgid ""
"\n"
"Debugging:\n"
"  -d, --debug=[FLAGS]          set debug level (no FLAGS implies `aeq')\n"
"  -t, --trace=NAME             trace NAME when it will be defined\n"
"  -l, --arglength=NUM          restrict macro tracing size\n"
"  -o, --error-output=FILE      redirect debug and trace output\n"
msgstr ""

#: src/m4.c:184
msgid ""
"\n"
"FLAGS is any of:\n"
"  t   trace for all macro calls, not only traceon'ed\n"
"  a   show actual arguments\n"
"  e   show expansion\n"
"  q   quote values as necessary, with a or e flag\n"
"  c   show before collect, after collect and after call\n"
"  x   add a unique macro call id, useful with c flag\n"
"  f   say current input file name\n"
"  l   say current input line number\n"
"  p   show results of path searches\n"
"  i   show changes in input files\n"
"  V   shorthand for all of the above flags\n"
msgstr ""

#: src/m4.c:199
msgid ""
"\n"
"If no FILE or if FILE is `-', standard input is read.\n"
msgstr ""

#: src/m4.c:355
#, c-format
msgid "Bad debug flags: `%s'"
msgstr ""

#: src/m4.c:434
msgid "INTERNAL ERROR: Bad code in deferred arguments"
msgstr ""
