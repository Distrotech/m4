# Hand crafted tests for GNU M4.                               -*- Autotest -*-
# Copyright (C) 2001, 2006 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

AT_BANNER([Options.])


## ------------------ ##
## Discard comments.  ##
## ------------------ ##

AT_SETUP([--discard-comments])

AT_DATA([[in]],
[[This is not a comment # but this is.
# This line should dissappear completely.
This should not disappear.
changecom(`<!--', `-->')
html <!--
comment
 --> ends.
]])

AT_CHECK_M4([-c in], [0],
[[This is not a comment This should not disappear.

html  ends.
]])

AT_CLEANUP



## ------------------ ##
## import-environment ##
## ------------------ ##

AT_SETUP([--import-environment])

AT_DATA([[in]],
[[`TEST'=TEST
`ZAPPED'=ZAPPED
`OVERRIDE'=OVERRIDE
]])

TEST='This is an environment variable'
export TEST

ZAPPED='This is an environment variable which we will delete'
export ZAPPED

OVERRIDE='This is an environment variable which we will change'
export OVERRIDE

AT_CHECK_M4([--import-environment -UZAPPED -DOVERRIDE='It is changed.' in],
[0], [[TEST=This is an environment variable
ZAPPED=ZAPPED
OVERRIDE=It is changed.
]])

AT_CLEANUP


## ----------- ##
## debug-flags ##
## ----------- ##

AT_SETUP([--debug])

AT_DATA([[in]],
[[divnum
len(`abc')
]])

dnl AT_CHECK_M4 starts life with -d.  Make sure it looks like -daeq.
AT_CHECK_M4([-tlen in], [0], [[0
3
]], [[m4trace: -1- len(`abc') -> `3'
]])

dnl Test all flags.
AT_CHECK_M4([-dV in], [0], [[0
3
]], [[m4debug: module m4: opening file
m4debug: module m4: init hook called
m4debug: module m4: opened
m4debug: module m4: builtins loaded
m4debug: module gnu: opening file
m4debug: module gnu: opened
m4debug: module gnu: builtins loaded
m4debug: module gnu: macros loaded
m4debug: path search for `in' found `in'
m4debug: input read from in
m4trace:in:1: -1- id 1: divnum ...
m4trace:in:1: -1- id 1: divnum -> ???
m4trace:in:1: -1- id 1: divnum -> `0'
m4trace:in:2: -1- id 2: len ...
m4trace:in:2: -1- id 2: len(`abc') -> ???
m4trace:in:2: -1- id 2: len(...) -> `3'
m4debug:in:3: input exhausted
m4debug: module gnu: symbols unloaded
m4debug: module gnu: closed
m4debug: module m4: symbols unloaded
m4debug: module m4: resident module not closed
]])

dnl Test addition and subtraction of flags.
AT_CHECK_M4([-d-e -d+xt in], [0], [[0
3
]], [[m4trace: -1- id 1: divnum
m4trace: -1- id 2: len(`abc')
]])

AT_CLEANUP


## ---------------- ##
## obsolete options ##
## ---------------- ##

AT_SETUP([deprecated options])

dnl -N/--diversions are no-ops since 1.4.x
AT_CHECK_M4([-N1 --diversions=1], [0], [],
[[m4: Warning: `m4 -N' is deprecated
m4: Warning: `m4 --diversions' is deprecated
]])

dnl -H/--hashsize are no-ops since 2.0, and still silent for now...
AT_CHECK_M4([-H1 --hashsize=1])

dnl -S/-T are no-ops for compatibility
AT_CHECK_M4([-S1 -T1], [0], [],
[[m4: Warning: `m4 -S' may be removed in a future release
m4: Warning: `m4 -T' may be removed in a future release
]])

dnl -Bint can be confused with its no-op meaning in 1.4.x, but all other
dnl uses of -B or its long option are okay
AT_CHECK_M4([-B1 -B./1 --prepend-include=1], [0], [],
[[m4: Warning: recommend using `m4 -B ./1' instead
]])

dnl --error-output is a misleading name
AT_CHECK_M4([--error-output=trace], [0], [],
[[m4: Warning: --error-output is deprecated, use --debugfile instead
]])
AT_CHECK([rm trace])

AT_CLEANUP


## --------------- ##
## prepend-include ##
## --------------- ##

AT_SETUP([--prepend-include])

dnl Lots of data to set up.
AT_DATA([[in]],
[[include(`foo')dnl
include(`bar')dnl
include(`bad')dnl
include(`blah')dnl
]])

AT_CHECK([mkdir pre post])

AT_DATA([[pre/foo]], [[in pre/foo
]])
AT_DATA([[foo]], [[in ./foo
]])
AT_DATA([[bar]], [[in ./bar
]])
AT_DATA([[post/bar]], [[in post/bar
]])
AT_DATA([[post/blah]], [[in post/blah
]])

dnl Make circular links in the subdirectories, to ensure that the error
dnl message when bad cannot be opened comes from the search in ., regardless
dnl of what else was searched.
AT_CHECK([ln -s bad pre/bad])
AT_CHECK([ln -s bad post/bad])

dnl Finally, see that it all works.
AT_CHECK_M4([-I post -B pre in], [1],
[[in pre/foo
in ./bar
in post/blah
]], [[m4:in:3: include: cannot open `bad': No such file or directory
]])

AT_CLEANUP


## ---------------- ##
## help and version ##
## ---------------- ##

AT_SETUP([--help and --version])

AT_CHECK_M4([--help], [0], [stdout])
AT_CHECK([[sed -n -e 's|Usage:.*\[OPTION\]... \[FILE\]...|success|p' stdout]],
[0], [success
])

AT_CHECK_M4([--version], [0], [stdout])
AT_CHECK([[sed -n -e 's|There is NO WARRANTY.*|success|p' stdout]],
[0], [success
])

dnl make sure option specified first takes precedence
AT_CHECK_M4([--help --version], [0], [stdout])
AT_CHECK([[sed -n -e 's|Usage:.*\[OPTION\]... \[FILE\]...|success|p' stdout]],
[0], [success
])

AT_CHECK_M4([--version --help], [0], [stdout])
AT_CHECK([[sed -n -e 's|There is NO WARRANTY.*|success|p' stdout]],
[0], [success
])

AT_CLEANUP


## ----- ##
## safer ##
## ----- ##

AT_SETUP([--safer])

dnl with --safer, debugfile is crippled, but -o is not
AT_DATA([[in]],
[[define(`foo', `1')foo
debugfile(`trace2')
define(`foo', `2')foo
]])

AT_CHECK_M4([--safer -o trace1 -t foo in], [1],
[[1

2
]], [[m4:in:2: debugfile: disabled by --safer
]])

AT_CHECK([test -f trace2], [1])
AT_CHECK([cat trace1], [0],
[[m4trace: -1- foo -> `1'
m4trace: -1- foo -> `2'
]])

dnl make sure builtin cannot bypass --safer, and that maketemp does not
dnl create file
AT_DATA([[in]], [[builtin(`maketemp', `./fooXXXXXX')
]])

AT_CHECK([echo foo*], [0], [foo*
])

AT_CHECK_M4([--safer in], [1], [[
]], [[m4:in:1: maketemp: disabled by --safer
]])

AT_CHECK([echo foo*], [0], [foo*
])

AT_CLEANUP


## --------- ##
## debugfile ##
## --------- ##

AT_SETUP([--debugfile])

dnl For a while, CVS m4 mistakenly replaced debug output with stdout
dnl when stdout and stderr were the same file.

AT_DATA([[in]], [[foo
]])

AT_CHECK_M4([-otrace1 -tfoo -Dfoo=bar in 2>&1], [0], [[bar
]])

AT_CHECK_M4([--debugfile=trace2 -tfoo -Dfoo=bar in], [0], [[bar
]])

AT_CHECK([cmp trace1 trace2])

AT_CLEANUP
