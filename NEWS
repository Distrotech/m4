GNU m4 NEWS - History of user-visible changes.		-*- outline -*-
Copyright (C) 1992, 1993, 1994, 1998, 2000, 2001, 2006 Free Software
Foundation, Inc.

Version beta 1.9b - ???, by ??? (CVS version 1.9a)

NOTE - there are still a number of FIXMEs to resolve before this can be
promoted to 2.0.

* The build environment has been updated to modern GNU practices,
  depending on newer features of Autoconf, Automake, Libtool, Gettext,
  and Gnulib to be more portable to a wide variety of platforms.

* If the POSIXLY_CORRECT environment variable is set, m4 now disables
  GNU extensions that are incompatible with POSIX.
  - FIXME: POSIXLY_CORRECT should imply -G, rather than being a separate
  conditional in the code.  And we should have -g to override the
  environment.  Also, the list of features incompatible with POSIX is
  still larger than what either flag currently affects.

* POSIXLY_CORRECT and `m4 --traditional' now makes the `define' builtin
  replace all `pushdef'ed values of a macro.
  - FIXME: The Austin group clarified that this was never a POSIX
  requirement; consider reverting this change.

* The `defn' builtin now allows any number of arguments, as POSIX requires.
  - FIXME: This still doesn't work with concatenating builtins with text.

* The '$' syntax class is now enabled.  See the manual for examples.
  - FIXME: POSIX recommends using ${10} instead of $10 for the tenth
  positional argument.  We should deprecate $10.

* New builtin `renamesyms' allows programmatic renaming of all symbols
  according to a regular expression.
  - FIXME: This feature can cause core dumps when renaming multiple
  symbols to the same name.

* New `-r'/`--regexp-syntax' command-line option changes the default
  regular expression syntax used by M4.  Without this option, M4 continues
  to use EMACS style expressions.  A new section in the info docs
  explains the differences between them, and what builtins are affected.

* The experimental `epatsubst' and `eregexp' have been removed in favor
  of a new `changeresyntax' builtin.

* `patsubst' and `regexp' have a new optional 4th argument to use a
  different regular expression syntax for the duration of that invocation.

* New `-B'/`--prepend-include' command-line option allows prepending to
  the include path, rather than always searching `.' first.

* New `--safer' command-line option cripples the potentially unsafe
  macros `debugfile', `syscmd', `esyscmd', and `maketemp'.

* New `-b'/`--batch' command line option to force non-interactive mode.
  Also, in addition to `-e'/`--interactive' requesting interactive mode, m4
  now follows the lead of sh, and automatically enters interactive mode
  when there are no files specified, and when both standard input and
  standard error are terminals.

* New `m' flag to `-d'/`--debug' option or `debugmode' macro traces
  actions related to module loading and unloading, and affects `dumpdef'
  output to show where builtins come from.  New `s' flag shows the entire
  stack of `pushdef' definitions during `dumpdef'.  Also, the `--debug'
  option now understands `-' and `+' modifiers, the way `debugmode' has
  always done.

* The semantics of `traceon' and `traceoff' now match traditional
  implementations: when called without arguments, they affect global state
  rather than affecting only the macros defined at that moment.  The
  manual includes an example of how to recover 1.4.x semantics.

* The syntax of frozen files format V2 has been improved to save
  additional state.
  - FIXME: format 2 still needs to be tweaked to allow complete ASCII
  representation and to catch any more missing state; once 2.0 is released,
  any further changes would introduce format 3.

* The `-o'/`--error-output' options, which were replaced by
  `--debugfile' in M4 1.4.7, now issue a deprecation warning.  This warning
  interferes with all versions of Autoconf prior to 2.61, so plan on
  installing an updated Autoconf when installing M4 2.0.

* The `-H'/`--hashsize' options, which were made no-ops in a previous
  beta, now issue a deprecation warning.

* The `dumpdef' macro now always outputs to standard error, rather than
  the debug file specified by the `--debugfile' option or `debugfile'
  macro.

* The builtins `modules' and `symbols', introduced in previous betas,
  have been renamed `m4modules' and `m4symbols', in order to minimize
  problems when upgrading from 1.4.x and processing English text.  To
  prevent future problems, any future macro added as a GNU extension will
  either be blind (ie. be unrecognized without arguments), or begin with
  the prefix `m4' or `__'.

* The `-l'/`--arglength' command line argument now affects dumpdef
  output as well as trace output.

* FIXME: `m4wrap' semantics need an update to FIFO.

* FIXME: include the (long) list of changes in 1.4.x that were not already
  in earlier betas.

Version beta 1.4q - August 2001, by Gary V. Vaughan

* Support for the experimental `changeword' has been dropped.

* `m4 --hashsize' and `-H' are still accepted, but have no effect.  M4
  will grow its internal symbol table if the symbol density is having
  an effect on performance.

* `configure --without-modules' will build an m4 binary with no preloaded
  modules.  At startup it will search for and load modules `m4' and either
  `gnu' or `traditional'.  This mode of operation can be used for
  development and debugging of the base modules without the need to
  recompile all of m4 with each modification.

* `configure --with-modules="gnu m4 traditional load"', for example,
  will build an m4 binary with the named modules preloaded, ready to
  be activated (even on static lib only machines) with the `-m' option
  or using the `load' builtin.

* M4 has no builtins or macros in core, they are all loaded from modules
  at startup.  This means that modules are no longer optional, though
  the standard build will statically link the modules `m4', `gnu' and
  `traditional', so even on machines with no ltdl support, all of the
  functionality from previous releases is available.

* New builtin `load' to dynamically load modules which can define new
  builtins and user macros.

* New builtin `unload' to remove loaded modules (and the builtins and user
  macros they define) from the running m4 interpreter.

* New builtins `eregexp' and `epatsubst' to use Extended Regular Expressions
  syntax in lieu of Basic Regular Expressions as used by `regexp' and
  `patsubst'.

* The names of all currently loaded modules are returned by the new
  builtin, ``modules''.

* Loadable modules can define new builtin functions or text expansion
  macros.

* The module code has been rewritten to use libltdl, the libtool dynamic
  loader, which means GNU m4 can now load (and unload) modules just about
  anywhere which it can be built.  This includes obscure hosts such as
  cygwin and BeOS, and also on hosts which do not have shared libraries,
  through preloading (see libtool manual) and GNU dld.

* Modules can now be built without the m4 source being available using the
  installed m4module.h header file (and some other headers that it includes
  for you), and the installed libm4.la libtool library.  All symbols
  exported from libm4.la have a prefix of `m4_' or `M4_'.  See the modules
  directory for examples of usage.

* A new V2 format for frozen files that saves module and syntax information.

Version beta 1.4o - January 2000, by Rene' Seindal

* Modules can be loaded from the command line with --load-module

* Modules now use libtool's wrapper libltdl.

* New builtin `symbols' allows dynamic queries of all currently defined
  macros.

* Bug fixes.

Version beta 1.4n - November 1998, by Rene' Seindal

* The module code has been reorganised yet again, and now compiles
  correctly on GNU/Linux, HPUX 9 and 10, SunOS 5 and Solaris 5.

* When configured --with-gmp a new builtin `mpeval' is now defined.  The
  builtin `eval' retains its normal behaviour.

* m4 --version also shows which options were used for compilation, such as:
  "GNU m4 1.4n (options: modules gmp changeword)"

* New option --import-environment defines all environment variables as
  macros.  This is done before -D and -U are handled, so the macros can be
  changed through these options.

* Error messages now always print program name before input file name as
  specified by GNU coding standards.  Reported by Akim Demaille
  <demaille@inf.enst.fr>.

* Bug fixed: "undivert(0)" could cause m4 to read standard output.  A call
  of "undivert(0)" is now silently ignored.

* Bug fixed: when compiling --with-included-gettext, <libintl.h> wasn't
  found in intl/ directory.  Reported by Andrew Bettison
  <andrewb@zip.com.au>.

Version beta 1.4m - November 1998, by Rene' Seindal

* Using libtool for compiling modules and for linking main app.

* Reorganised the dynamic module code to encapsulate system dependencies
  better.  The code for HPUX shl_load() still needs testing and debugging.
  A dld interface is also missing.  Any volunteers?

* The files from the GNU m4 web-site is now in examples/WWW as a more
  complete example of what GNU m4 can do.

Version beta 1.4l - November 1998, by Rene' Seindal

* GNU m4 now has an escape syntax category.  If a character is marked as
  an escape, words are only recognised as macros if preceded by an escape
  character.  It is a bit like -P, but dynamic: it can be turned on and
  off.  The GNU m4 web-site on http://www.seindal.dk/rene/gnu/ is
  maintained with this feature - the m4 source is available on the site.

* The module interface is improved, thanks to "Brian J. Fox"
  <bfox@datawave.net>, who have contributed some code from Meta-HTML.  The
  modules now build automatically and installs properly, by default in
  /usr/local/libexec/m4.  There is a preliminary, untested support for
  shl_load().

* There is now a __m4_version__ macro that expands to the current version
  number.

Version beta 1.4k - November 1998, by Erick Branderhorst and Rene' Seindal

* GNU m4 now uses gettext to support internationalization.

* GNU m4 now uses automake to control Makefile.in generation.  This
  should make it more consistent with the GNU standards.

* GNU m4 will use the gmp library for multiple precision integral and
  rational arithmetic in `eval' if configured with `--with-gmp'.  If
  configured without `--with-gmp' or if gmp is not available, and the type
  `long long int' is, GNU m4 will use that for `eval' arithmetic.

* GNU m4 now parses the input according to a syntax table, that can be
  modified through the new builtin `changesyntax'.  It is a generalisation
  of the existing builtins `changecom' and `changequote'.  The changes are
  completely backwards compatible (except for the existence of
  `changesyntax').

* Sync lines can be turned on and off with the `syncoutput' builtin.  The
  builtin `syncoutput' is a GNU extension.

* New experimental feature: dynamically loadable modules.  New builtin
  `loadmodules' loads shared libraries, that can define new builtin
  macros, ie, new macros can be written in C.  Depends on the dlopen()
  interface, and is currently only tested on Linux.  Enabled at configure
  time with `--with-modules'.  Documentation is in src/module.c and
  module/README.

* Implement a GNU message catalog for French (Franc,ois Pinard).

* Filenames found through path searches are now correctly reflected in
  error and debug messages and through the `__file__' macro.

Bugs fixed

* All 8-bit characters can now be used for quotes.


Version 1.4 - October 1994, by Franc,ois Pinard

(No user visible changes)


Version 1.3 - September 1994, by Franc,ois Pinard

* Diversions are created as needed.  Option `-N' is still accepted, but
otherwise ignored.  Users should use only negative diversion numbers,
instead of high positive numbers, for diverting to nowhere.

* Diversions should also work faster.  No temporary files will be needed
at all if all diversions taken altogether do not use more than 512K.

* Frozen state files may be produced with the `--freeze-state' (-F)
option and later brought back through the `--reload-state' (-R) option.


Version 1.2 - July 1994, by Franc,ois Pinard

* In patsubst(STRING, REGEXP, REPLACEMENT), \& in REPLACEMENT has been
changed to represent this part of STRING matched by the whole REGEXP,
instead of the whole STRING as before.  \0 does the same, but emits a
diagnostic saying it will disappear in some subsequent release.

* eval(EXPR) emits a diagnostic if EXPR has suffixed crumb.  The same for
other numeric conversions in incr(), decr(), divert(), etc.

* `--fatal-warnings' (-E) stops execution at first warning.

* `--nesting-limit=LEVEL' (-L LEVEL) sets a limit to macro nesting.
It is initially fixed at 250.

* `--word-regexp=REGEXP' (-W REGEXP) modifies macro name syntax, like
does the new `changeword(REGEXP)' macro.  This feature is experimental,
tell me your opinions about it.  You do need --enable-changeword at
configure time to get these things.  Do *not* depend on them yet.

* Trace output format is scannable by GNU Emacs' next-error function.

* Stack overflow is detected and diagnosed on some capable systems.

* Various bugs have been corrected, m4 should be more portable.  See the
ChangeLog for details.


Version 1.1 - November 1993, by Franc,ois Pinard

Changes which might affect existing GNU m4 scripts:

* Option `-V' has been removed, use `--version' instead.  `--version'
writes on standard output instead of standard error, and inhibits any
script execution.

* `--no-gnu-extensions' has been renamed `--traditional'.

* In `eval', `^' used to indicate exponentiation, use `**' instead.

* The automatic undiversion which takes place at end of all input is
forced into the main output stream.

Changes which are unlikely to affect existing scripts:

* `--help' prints an usage summary on standard output.  Script execution
is then inhibited.

* `--prefix-builtins' (-P) prefixes all builtin macros by `m4_'.

* Most builtin macros for which arguments are mandatory, called without
any arguments, are no more recognized as builtin macros: they are
consequently copied verbatim to the output stream.

* `define' and `pushdef' are usable with only one argument, they give
this argument an empty definition.

* `eval' new operators for binary representation handling: `^' for
exclusive-or, `~' for the bitwise negation, `<<' and `>>' for shifts.

* `eval' recognizes the notation 0bDIGITS for binary numbers and the
notation 0rRADIX:DIGITS for numbers in any radix from 1 to 36.

Version 1.0.3 - December 1992, by Franc,ois Pinard

Changes for the user:

* `dnl' outputs a diagnostic if immediately followed by `('.  Usually,
`dnl' is followed by newline or whitespace.

* `ifelse' accepts without complaining the common idiom of having only
one argument.  This is useful for introducing long comments.

* `eval' always expresses values as signed, whatever the radix.

* M4OPTS environment variable is no longer obeyed.

* `--no-warnings' option is renamed `--silent'.

* Debug lines use a new format more compatible with GNU standards.

* Various bugs have been corrected.  See the ChangeLog for details.

Changes for the installer:

* GNU m4 now uses an Autoconf-generated configure script, and should be
more easily portable in many ways.  (Cray is not supported yet).

* `make check' has been made more portable, expect no errors.

Changes for the programmer:

* Sources have been fully reindented to comply with GNU standards, and
cleaned up in many ways.

* Sources have been protoized.  Non-ANSI compilers are automatically
detected, then sources are unprotoized on the fly before compilation.

* GNU m4 uses newer versions of obstack, regex, getopt, etc.

Version 1.0 - October 1991, by Rene' Seindal

* Uses GNU configure, taken from the gdb distribution.

* Uses GNU getopt(), with long option names.

* The -Q/+quiet option is added, which suppresses warnings about missing
or superflous arguments to builtin macros.

* Added default options via the M4OPTS environment variable.

* Several minor bugs have been fixed.

Version 0.99 - July 1991, by Rene' Seindal

* The builtins `incr' and `decr' are now implemented without use of
`eval'.

* The builtin `indir' is added, to allow for indirect macro calls
(allows use of "illegal" macro names).

* The debugging and tracing facilities has been enhanced considerably.
See the manual for details.

* The -tMACRO option is added, marks MACRO for tracing as soon as it
is defined.

* Builtins are traced after renaming iff they were before.

* Named files can now be undiverted.

* The -Nnum option can be used to increase the number of divertions
available.

* Calling changecom without arguments now disables all comment handling.

* A bug in `dnl' is fixed.

* A bug in the multi-character quoting code is fixed.

* Several typos in the manual has been corrected.  More probably persist.

Version 0.75 - November 1990, by Rene' Seindal

* Implemented search path for include files (-I option and M4PATH
environment variable).

* Implemented builtin `format' for printf-like formatting.

* Implemented builtin `regexp' for searching for regular expressions.

* Implemented builtin `patsubst' for substitution with regular
expressions.

* Implemented builtin `esyscmd', which expands to a shell commands output.

* Implemented `__file__' and `__line__' for use in error messages.

* Implemented character ranges in `translit'.

* Implemented control over debugging output.

* Implemented multi-character quotes.

* Implemented multi-character comment delimiters.

* Changed predefined macro `gnu' to `__gnu__'.

* Changed predefined macro `unix' to `__unix__', when the -G option is
not used.  With -G, `unix' is still defined.

* Added program name to error messages.

* Fixed two missing null bytes bugs.

Version 0.50 - January 1990, by Rene' Seindal

* Initial beta release.

Local Variables:
fill-column: 75
End:
