# This file is part of the GNU m4 test suite


## ----------------------- ##
## Inhibiting Invocation.  ##
## ----------------------- ##

AT_SETUP([[Inhibiting Invocation]])

# From example in ../doc/m4.texinfo line 866.

AT_DATA([[in]],
[[define(`x', `substr(ab')
define(`y', `cde, 3, 2)')
x`'y
]])

AT_CHECK_M4([[in]], 0,
[[

de
]])

# From example in ../doc/m4.texinfo line 892.

AT_DATA([[in]],
[[define(`macro', `di$1')
macro(`v')`ert'
]])

AT_CHECK_M4([[in]], 0,
[[
divert
]])

AT_CLEANUP


## -------- ##
## Define.  ##
## -------- ##

AT_SETUP([[Define]])

# From example in ../doc/m4.texinfo line 1030.

AT_DATA([[in]],
[[define(`foo', `Hello world.')
foo
]])

AT_CHECK_M4([[in]], 0,
[[
Hello world.
]])

# From example in ../doc/m4.texinfo line 1050.

AT_DATA([[in]],
[[define(`array', `defn(format(``array@<:@%d@:>@'', `$1'))')
define(`array_set', `define(format(``array@<:@%d@:>@'', `$1'), `$2')')
array_set(4, `array element no. 4')
array_set(17, `array element no. 17')
array(4)
array(eval(`10 + 7'))
]])

AT_CHECK_M4([[in]], 0,
[[



array element no. 4
array element no. 17
]])

AT_CLEANUP


## ----------- ##
## Arguments.  ##
## ----------- ##

AT_SETUP([[Arguments]])

# From example in ../doc/m4.texinfo line 1077.

AT_DATA([[in]],
[[define(`exch', `$2, $1')
exch(`arg1', `arg2')
]])

AT_CHECK_M4([[in]], 0,
[[
arg2, arg1
]])

# From example in ../doc/m4.texinfo line 1087.

AT_DATA([[in]],
[[define(`exch', `$2, $1')
define(exch(``expansion text'', ``macro''))
macro
]])

AT_CHECK_M4([[in]], 0,
[[

expansion text
]])

# From example in ../doc/m4.texinfo line 1107.

AT_DATA([[in]],
[[define(`test', ``Macro name: $0'')
test
]])

AT_CHECK_M4([[in]], 0,
[[
Macro name: test
]])

# From example in ../doc/m4.texinfo line 1117.

AT_DATA([[in]],
[[define(`foo', `This is macro `foo'.')
foo
]])

AT_CHECK_M4([[in]], 0,
[[
This is macro foo.
]])

AT_CLEANUP


## ------------------ ##
## Pseudo Arguments.  ##
## ------------------ ##

AT_SETUP([[Pseudo Arguments]])

# From example in ../doc/m4.texinfo line 1141.

AT_DATA([[in]],
[[define(`nargs', `$#')
nargs
nargs()
nargs(arg1, arg2, arg3)
]])

AT_CHECK_M4([[in]], 0,
[[
0
1
3
]])

# From example in ../doc/m4.texinfo line 1155.

AT_DATA([[in]],
[[define(`echo', `$*')
echo(arg1,    arg2, arg3 , arg4)
]])

AT_CHECK_M4([[in]], 0,
[[
arg1,arg2,arg3 ,arg4
]])

# From example in ../doc/m4.texinfo line 1166.

AT_DATA([[in]],
[[define(`echo', `$@')
echo(arg1,    arg2, arg3 , arg4)
]])

AT_CHECK_M4([[in]], 0,
[[
arg1,arg2,arg3 ,arg4
]])

# From example in ../doc/m4.texinfo line 1176.

AT_DATA([[in]],
[[define(`echo1', `$*')
define(`echo2', `$@')
define(`foo', `This is macro `foo'.')
echo1(foo)
echo2(foo)
]])

AT_CHECK_M4([[in]], 0,
[[


This is macro This is macro foo..
This is macro foo.
]])

# From example in ../doc/m4.texinfo line 1196.

AT_DATA([[in]],
[[define(`foo', `$$$ hello $$$')
foo
]])

AT_CHECK_M4([[in]], 0,
[[
$$$ hello $$$
]])

AT_CLEANUP


## ---------- ##
## Undefine.  ##
## ---------- ##

AT_SETUP([[Undefine]])

# From example in ../doc/m4.texinfo line 1223.

AT_DATA([[in]],
[[foo
define(`foo', `expansion text')
foo
undefine(`foo')
foo
]])

AT_CHECK_M4([[in]], 0,
[[foo

expansion text

foo
]])

AT_CLEANUP


## ------ ##
## Defn.  ##
## ------ ##

AT_SETUP([[Defn]])

# From example in ../doc/m4.texinfo line 1261.

AT_DATA([[in]],
[[define(`zap', defn(`undefine'))
zap(`undefine')
undefine(`zap')
]])

AT_CHECK_M4([[in]], 0,
[[

undefine(zap)
]])

# From example in ../doc/m4.texinfo line 1281.

AT_DATA([[in]],
[[define(`string', `The macro dnl is very useful
')
string
defn(`string')
]])

AT_CHECK_M4([[in]], 0,
[[
The macro ]])

AT_CLEANUP


## --------- ##
## Pushdef.  ##
## --------- ##

AT_SETUP([[Pushdef]])

# From example in ../doc/m4.texinfo line 1323.

AT_DATA([[in]],
[[define(`foo', `Expansion one.')
foo
pushdef(`foo', `Expansion two.')
foo
popdef(`foo')
foo
popdef(`foo')
foo
]])

AT_CHECK_M4([[in]], 0,
[[
Expansion one.

Expansion two.

Expansion one.

foo
]])

# From example in ../doc/m4.texinfo line 1347.

AT_DATA([[in]],
[[define(`foo', `Expansion one.')
foo
pushdef(`foo', `Expansion two.')
foo
define(`foo', `Second expansion two.')
foo
undefine(`foo')
foo
]])

AT_CHECK_M4([[in]], 0,
[[
Expansion one.

Expansion two.

Second expansion two.

foo
]])

AT_CLEANUP


## ------- ##
## Indir.  ##
## ------- ##

AT_SETUP([[Indir]])

# From example in ../doc/m4.texinfo line 1393.

AT_DATA([[in]],
[[define(`$$internal$macro', `Internal macro (name `$0')')
$$internal$macro
indir(`$$internal$macro')
]])

AT_CHECK_M4([[in]], 0,
[[
$$internal$macro
Internal macro (name $$internal$macro)
]])

AT_CLEANUP


## --------- ##
## Symbols.  ##
## --------- ##

AT_SETUP([[Symbols]])

# From example in ../doc/m4.texinfo line 1439.

AT_DATA([[in]],
[[symbols(`ifndef', `ifdef', `define', `undef')
]])

AT_CHECK_M4([[in]], 0,
[[define,ifdef
]])

AT_CLEANUP


## ------- ##
## Ifdef.  ##
## ------- ##

AT_SETUP([[Ifdef]])

# From example in ../doc/m4.texinfo line 1475.

AT_DATA([[in]],
[[ifdef(`foo', ``foo' is defined', ``foo' is not defined')
define(`foo', `')
ifdef(`foo', ``foo' is defined', ``foo' is not defined')
]])

AT_CHECK_M4([[in]], 0,
[[foo is not defined

foo is defined
]])

AT_CLEANUP


## -------- ##
## Ifelse.  ##
## -------- ##

AT_SETUP([[Ifelse]])

# From example in ../doc/m4.texinfo line 1505.

AT_DATA([[in]],
[[ifelse(`foo', `bar', `true')
ifelse(`foo', `foo', `true')
ifelse(`foo', `bar', `true', `false')
ifelse(`foo', `foo', `true', `false')
]])

AT_CHECK_M4([[in]], 0,
[[
true
false
true
]])

# From example in ../doc/m4.texinfo line 1524.

AT_DATA([[in]],
[[ifelse(`foo', `bar', `third', `gnu', `gnats', `sixth', `seventh')
]])

AT_CHECK_M4([[in]], 0,
[[seventh
]])

AT_CLEANUP


## ------- ##
## Loops.  ##
## ------- ##

AT_SETUP([[Loops]])

# From example in ../doc/m4.texinfo line 1556.

AT_DATA([[in]],
[[shift
shift(`bar')
shift(`foo', `bar', `baz')
]])

AT_CHECK_M4([[in]], 0,
[[

bar,baz
]])

# From example in ../doc/m4.texinfo line 1569.

AT_DATA([[in]],
[[define(`reverse', `ifelse($#, 0, , $#, 1, ``$1'',
			  `reverse(shift($@)), `$1'')')
reverse
reverse(`foo')
reverse(`foo', `bar', `gnats', `and gnus')
]])

AT_CHECK_M4([[in]], 0,
[[

foo
and gnus, gnats, bar, foo
]])

AT_CLEANUP


## --------- ##
## Dumpdef.  ##
## --------- ##

AT_SETUP([[Dumpdef]])

# From example in ../doc/m4.texinfo line 1680.

AT_DATA([[in]],
[[define(`foo', `Hello world.')
dumpdef(`foo')
dumpdef(`define')
]])

AT_CHECK_M4([[in]], 0,
[[


]],
[[foo:	`Hello world.'
define:	<define>
]])

AT_CLEANUP


## ------- ##
## Trace.  ##
## ------- ##

AT_SETUP([[Trace]])

# From example in ../doc/m4.texinfo line 1721.

AT_DATA([[in]],
[[define(`foo', `Hello World.')
define(`echo', `$@')
traceon(`foo', `echo')
foo
echo(`gnus', `and gnats')
]])

AT_CHECK_M4([[in]], 0,
[[


Hello World.
gnus,and gnats
]],
[[m4trace: -1- foo -> `Hello World.'
m4trace: -1- echo(`gnus', `and gnats') -> ``gnus',`and gnats''
]])

AT_CLEANUP


## ----- ##
## Dnl.  ##
## ----- ##

AT_SETUP([[Dnl]])

# From example in ../doc/m4.texinfo line 1861.

AT_DATA([[in]],
[[define(`foo', `Macro `foo'.')dnl A very simple macro, indeed.
foo
]])

AT_CHECK_M4([[in]], 0,
[[Macro foo.
]])

AT_CLEANUP


## ------------- ##
## Changequote.  ##
## ------------- ##

AT_SETUP([[Changequote]])

# From example in ../doc/m4.texinfo line 1895.

AT_DATA([[in]],
[[changequote(@<:@, @:>@)
define(@<:@foo@:>@, @<:@Macro @<:@foo@:>@.@:>@)
foo
]])

AT_CHECK_M4([[in]], 0,
[[

Macro foo.
]])

# From example in ../doc/m4.texinfo line 1907.

AT_DATA([[in]],
[[changequote(@<:@@<:@, @:>@@:>@)
define(@<:@@<:@foo@:>@@:>@, @<:@@<:@Macro @<:@@<:@@<:@foo@:>@@:>@@:>@.@:>@@:>@)
foo
]])

AT_CHECK_M4([[in]], 0,
[[

Macro @<:@foo@:>@.
]])

# From example in ../doc/m4.texinfo line 1919.

AT_DATA([[in]],
[[define(`foo', `Macro `FOO'.')
changequote(, )
foo
`foo'
]])

AT_CHECK_M4([[in]], 0,
[[

Macro `FOO'.
`Macro `FOO'.'
]])

AT_CLEANUP


## ----------- ##
## Changecom.  ##
## ----------- ##

AT_SETUP([[Changecom]])

# From example in ../doc/m4.texinfo line 1962.

AT_DATA([[in]],
[[define(`comment', `COMMENT')
# A normal comment
changecom(`/*', `*/')
# Not a comment anymore
But: /* this is a comment now */ while this is not a comment
]])

AT_CHECK_M4([[in]], 0,
[[
# A normal comment

# Not a COMMENT anymore
But: /* this is a comment now */ while this is not a COMMENT
]])

# From example in ../doc/m4.texinfo line 1980.

AT_DATA([[in]],
[[define(`comment', `COMMENT')
changecom
# Not a comment anymore
]])

AT_CHECK_M4([[in]], 0,
[[

# Not a COMMENT anymore
]])

AT_CLEANUP


## -------------- ##
## Changesyntax.  ##
## -------------- ##

AT_SETUP([[Changesyntax]])

# From example in ../doc/m4.texinfo line 2129.

AT_DATA([[in]],
[[define(`test.1', `TEST ONE')
__file__
changesyntax(`O_', `W.')
__file__
test.1
]])

AT_CHECK_M4([[in]], 0,
[[
in

__file__
TEST ONE
]])

# From example in ../doc/m4.texinfo line 2145.

AT_DATA([[in]],
[[define(`test', `$#')
test(a, b, c)
changesyntax(`(<', `,|', `)>', `O(,)')
test(a, b, c)
test<a|b|c>
]])

AT_CHECK_M4([[in]], 0,
[[
3

0(a, b, c)
3
]])

# From example in ../doc/m4.texinfo line 2162.

AT_DATA([[in]],
[[define(`test', `$1$2$3')
test(`a', `b', `c')
changesyntax(`O         ')
test(a, b, c)
]])

AT_CHECK_M4([[in]], 0,
[[
abc

a b c
]])

# From example in ../doc/m4.texinfo line 2188.

AT_DATA([[in]],
[[define(`foo', `bar')
changesyntax(`@@')
foo
@foo
@changesyntax(`@\', `O@')
foo
@foo
\foo
define(`#', `No comment')
\define(`#', `No comment')
\# \foo # Comment \foo
]])

AT_CHECK_M4([[in]], 0,
[[

foo
bar

foo
@foo
bar
define(#, No comment)

No comment bar # Comment \foo
]])

# From example in ../doc/m4.texinfo line 2217.

AT_DATA([[in]],
[[define(`@', `TEST')
@
changesyntax(`A@')
@
]])

AT_CHECK_M4([[in]], 0,
[[
@

TEST
]])

# From example in ../doc/m4.texinfo line 2241.

AT_DATA([[in]],
[[define(`test', `TEST')
changesyntax(`L<', `R>')
<test>
`test>
changequote(<@<:@>, `@:>@')
<test>
@<:@test@:>@
]])

AT_CHECK_M4([[in]], 0,
[[

test
test

<TEST>
test
]])

# From example in ../doc/m4.texinfo line 2263.

AT_DATA([[in]],
[[changesyntax(`({<', `)}>', `,;:', `O(,)')
eval{2**4-1; 2 : 8>
]])

AT_CHECK_M4([[in]], 0,
[[
00001111
]])

# From example in ../doc/m4.texinfo line 2274.

AT_DATA([[in]],
[[define(`test', `==$1==')
changequote(`<<', `>>')
changesyntax(<<L@<:@>>, <<R@:>@>>)
test(<<testing@:>@>>)
test(@<:@testing>>@:>@)
test(@<:@<<testing>>@:>@)
]])

AT_CHECK_M4([[in]], 0,
[[


==testing@:>@==
==testing>>==
==testing==
]])

AT_CLEANUP


## -------- ##
## M4wrap.  ##
## -------- ##

AT_SETUP([[M4wrap]])

# From example in ../doc/m4.texinfo line 2440.

AT_DATA([[in]],
[[define(`cleanup', `This is the `cleanup' actions.
')
m4wrap(`cleanup')
This is the first and last normal input line.
]])

AT_CHECK_M4([[in]], 0,
[[

This is the first and last normal input line.
This is the cleanup actions.
]])

AT_CLEANUP


## --------- ##
## Include.  ##
## --------- ##

AT_SETUP([[Include]])

# From example in ../doc/m4.texinfo line 2494.

AT_DATA([[in]],
[[include(`no-such-file')
sinclude(`no-such-file')
]])

AT_CHECK_M4([[in]], 0,
[[

]],
[[m4: in: 1: Cannot open no-such-file: No such file or directory
]])

# From example in ../doc/m4.texinfo line 2514.

AT_DATA([[in]],
[[define(`foo', `FOO')
include(`incl.m4')
]])

AT_CHECK_M4([[in]], 0,
[[
Include file start
FOO
Include file end

]])

# From example in ../doc/m4.texinfo line 2529.

AT_DATA([[in]],
[[define(`bar', include(`incl.m4'))
This is `bar':  >>>bar<<<
]])

AT_CHECK_M4([[in]], 0,
[[
This is bar:  >>>Include file start
foo
Include file end
<<<
]])

AT_CLEANUP


## -------- ##
## Divert.  ##
## -------- ##

AT_SETUP([[Divert]])

# From example in ../doc/m4.texinfo line 2612.

AT_DATA([[in]],
[[divert(1)
This text is diverted.
divert
This text is not diverted.
]])

AT_CHECK_M4([[in]], 0,
[[
This text is not diverted.

This text is diverted.
]])

# From example in ../doc/m4.texinfo line 2632.

AT_DATA([[in]],
[[divert(-1)
define(`foo', `Macro `foo'.')
define(`bar', `Macro `bar'.')
divert
]])

AT_CHECK_M4([[in]], 0,
[[
]])

AT_CLEANUP


## ---------- ##
## Undivert.  ##
## ---------- ##

AT_SETUP([[Undivert]])

# From example in ../doc/m4.texinfo line 2658.

AT_DATA([[in]],
[[divert(1)
This text is diverted.
divert
This text is not diverted.
undivert(1)
]])

AT_CHECK_M4([[in]], 0,
[[
This text is not diverted.

This text is diverted.

]])

# From example in ../doc/m4.texinfo line 2682.

AT_DATA([[in]],
[[divert(1)
This text is diverted first.
divert(0)undivert(1)dnl
undivert(1)
divert(1)
This text is also diverted but not appended.
divert(0)undivert(1)dnl
]])

AT_CHECK_M4([[in]], 0,
[[
This text is diverted first.


This text is also diverted but not appended.
]])

# From example in ../doc/m4.texinfo line 2708.

AT_DATA([[in]],
[[define(`bar', `BAR')
undivert(`foo')
include(`foo')
]])

AT_CHECK_M4([[in]], 0,
[[
bar

BAR

]])

AT_CLEANUP


## -------- ##
## Divnum.  ##
## -------- ##

AT_SETUP([[Divnum]])

# From example in ../doc/m4.texinfo line 2728.

AT_DATA([[in]],
[[Initial divnum
divert(1)
Diversion one: divnum
divert(2)
Diversion two: divnum
divert
]])

AT_CHECK_M4([[in]], 0,
[[Initial 0


Diversion one: 1

Diversion two: 2
]])

AT_CLEANUP


## ---------- ##
## Cleardiv.  ##
## ---------- ##

AT_SETUP([[Cleardiv]])

# From example in ../doc/m4.texinfo line 2759.

AT_DATA([[in]],
[[divert(1)
Diversion one: divnum
divert(2)
Diversion two: divnum
divert(-1)
undivert
]])

AT_CHECK_M4([[in]], 0, [])

# From example in ../doc/m4.texinfo line 2774.

AT_DATA([[in]],
[[define(`cleardivert',
`pushdef(`_num', divnum)divert(-1)undivert($@)divert(_num)popdef(`_num')')
]])

AT_CHECK_M4([[in]], 0,
[[
]])

AT_CLEANUP


## ----- ##
## Len.  ##
## ----- ##

AT_SETUP([[Len]])

# From example in ../doc/m4.texinfo line 2966.

AT_DATA([[in]],
[[len()
len(`abcdef')
]])

AT_CHECK_M4([[in]], 0,
[[0
6
]])

AT_CLEANUP


## ------- ##
## Index.  ##
## ------- ##

AT_SETUP([[Index]])

# From example in ../doc/m4.texinfo line 2986.

AT_DATA([[in]],
[[index(`gnus, gnats, and armadillos', `nat')
index(`gnus, gnats, and armadillos', `dag')
]])

AT_CHECK_M4([[in]], 0,
[[7
-1
]])

AT_CLEANUP


## -------- ##
## Regexp.  ##
## -------- ##

AT_SETUP([[Regexp]])

# From example in ../doc/m4.texinfo line 3012.

AT_DATA([[in]],
[[regexp(`GNUs not Unix', `\<@<:@a-z@:>@\w+')
regexp(`GNUs not Unix', `\<Q\w*')
]])

AT_CHECK_M4([[in]], 0,
[[5
-1
]])

# From example in ../doc/m4.texinfo line 3024.

AT_DATA([[in]],
[[regexp(`GNUs not Unix', `\w\(\w+\)$', `*** \& *** \1 ***')
]])

AT_CHECK_M4([[in]], 0,
[[*** Unix *** nix ***
]])

AT_CLEANUP


## -------- ##
## Substr.  ##
## -------- ##

AT_SETUP([[Substr]])

# From example in ../doc/m4.texinfo line 3040.

AT_DATA([[in]],
[[substr(`gnus, gnats, and armadillos', 6)
substr(`gnus, gnats, and armadillos', 6, 5)
]])

AT_CHECK_M4([[in]], 0,
[[gnats, and armadillos
gnats
]])

AT_CLEANUP


## ---------- ##
## Translit.  ##
## ---------- ##

AT_SETUP([[Translit]])

# From example in ../doc/m4.texinfo line 3078.

AT_DATA([[in]],
[[translit(`GNUs not Unix', `A-Z')
translit(`GNUs not Unix', `a-z', `A-Z')
translit(`GNUs not Unix', `A-Z', `z-a')
]])

AT_CHECK_M4([[in]], 0,
[[s not nix
GNUS NOT UNIX
tmfs not fnix
]])

AT_CLEANUP


## ---------- ##
## Patsubst.  ##
## ---------- ##

AT_SETUP([[Patsubst]])

# From example in ../doc/m4.texinfo line 3120.

AT_DATA([[in]],
[[patsubst(`GNUs not Unix', `^', `OBS: ')
patsubst(`GNUs not Unix', `\<', `OBS: ')
patsubst(`GNUs not Unix', `\w*', `(\&)')
patsubst(`GNUs not Unix', `\w+', `(\&)')
patsubst(`GNUs not Unix', `@<:@A-Z@:>@@<:@a-z@:>@+')
]])

AT_CHECK_M4([[in]], 0,
[[OBS: GNUs not Unix
OBS: GNUs OBS: not OBS: Unix
(GNUs)() (not)() (Unix)
(GNUs) (not) (Unix)
GN not ]])

# From example in ../doc/m4.texinfo line 3141.

AT_DATA([[in]],
[[define(`upcase', `translit(`$*', `a-z', `A-Z')')dnl
define(`downcase', `translit(`$*', `A-Z', `a-z')')dnl
define(`capitalize1',
     `regexp(`$1', `^\(\w\)\(\w*\)', `upcase(`\1')`'downcase(`\2')')')dnl
define(`capitalize',
     `patsubst(`$1', `\w+', `capitalize1(`\&')')')dnl
capitalize(`GNUs not Unix')
]])

AT_CHECK_M4([[in]], 0,
[[Gnus Not Unix
]])

AT_CLEANUP


## -------- ##
## Format.  ##
## -------- ##

AT_SETUP([[Format]])

# From example in ../doc/m4.texinfo line 3169.

AT_DATA([[in]],
[[define(`foo', `The brown fox jumped over the lazy dog')
format(`The string "%s" is %d characters long', foo, len(foo))
]])

AT_CHECK_M4([[in]], 0,
[[
The string "The brown fox jumped over the lazy dog" is 38 characters long
]])

AT_CLEANUP


## ------ ##
## Incr.  ##
## ------ ##

AT_SETUP([[Incr]])

# From example in ../doc/m4.texinfo line 3229.

AT_DATA([[in]],
[[incr(4)
decr(7)
]])

AT_CHECK_M4([[in]], 0,
[[5
6
]])

AT_CLEANUP


## ------ ##
## Eval.  ##
## ------ ##

AT_SETUP([[Eval]])

# From example in ../doc/m4.texinfo line 3311.

AT_DATA([[in]],
[[eval(`-3 * 5')
eval(index(`Hello world', `llo') >= 0)
define(`square', `eval(`($1)**2')')
square(`9')
square(square(5)+1)
define(`foo', `666')
eval(`foo / 6')
eval(foo/6)
]])

AT_CHECK_M4([[in]], 0,
[[-15
1

81
676


111
]],
[[m4: in: 7: Bad expression in eval: foo / 6
]])

# From example in ../doc/m4.texinfo line 3342.

AT_DATA([[in]],
[[eval(666, 10)
eval(666, 11)
eval(666, 6)
eval(666, 6, 10)
eval(-666, 6, 10)
]])

AT_CHECK_M4([[in]], 0,
[[666
556
3030
0000003030
-000003030
]])

AT_CLEANUP


## --------- ##
## Esyscmd.  ##
## --------- ##

AT_SETUP([[Esyscmd]])

# From example in ../doc/m4.texinfo line 3437.

AT_DATA([[in]],
[[define(`vice', `esyscmd(`grep Vice Makefile')')
vice
]])

AT_CHECK_M4([[in]], 0,
[[
#  Ty Coon, President of Vice

]])

AT_CLEANUP


## -------- ##
## Sysval.  ##
## -------- ##

AT_SETUP([[Sysval]])

# From example in ../doc/m4.texinfo line 3459.

AT_DATA([[in]],
[[syscmd(`false')
ifelse(sysval, 0, zero, nonzero)
syscmd(`true')
sysval
]])

AT_CHECK_M4([[in]], 0,
[[
nonzero

0
]])

AT_CLEANUP


## ---------- ##
## Errprint.  ##
## ---------- ##

AT_SETUP([[Errprint]])

# From example in ../doc/m4.texinfo line 3529.

AT_DATA([[in]],
[[errprint(`Illegal arguments to forloop
')
]])

AT_CHECK_M4([[in]], 0,
[[
]],
[[Illegal arguments to forloop
]])

# From example in ../doc/m4.texinfo line 3548.

AT_DATA([[in]],
[[errprint(`m4:'__file__:__line__: `Input error
')
]])

AT_CHECK_M4([[in]], 0,
[[
]],
[[m4:in:1: Input error
]])

AT_CLEANUP


## -------- ##
## M4exit.  ##
## -------- ##

AT_SETUP([[M4exit]])

# From example in ../doc/m4.texinfo line 3569.

AT_DATA([[in]],
[[define(`fatal_error', `errprint(`m4: '__file__: __line__`: fatal error: $*
')m4exit(1)')
fatal_error(`This is a BAD one, buster')
]])

AT_CHECK_M4([[in]], 1,
[[
]],
[[m4: in: 3: fatal error: This is a BAD one, buster
]])

AT_CLEANUP
